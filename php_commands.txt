 - - - - - - - - - - - - - - - - - - - - FUNKCJE DATY I CZASU  - - - - - - - - - - - - - - - - - - - - - - - 
date(format, timestamp)
FORMAT:
d - The day of the month (from 01 to 31)
D - A textual representation of a day (three letters)
j - The day of the month without leading zeros (1 to 31)
l (lowercase 'L') - A full textual representation of a day
N - The ISO-8601 numeric representation of a day (1 for Monday, 7 for Sunday)
S - The English ordinal suffix for the day of the month (2 characters st, nd, rd or th. Works well with j)
w - A numeric representation of the day (0 for Sunday, 6 for Saturday)
z - The day of the year (from 0 through 365)
W - The ISO-8601 week number of year (weeks starting on Monday)
F - A full textual representation of a month (January through December)
m - A numeric representation of a month (from 01 to 12)
M - A short textual representation of a month (three letters)
n - A numeric representation of a month, without leading zeros (1 to 12)
t - The number of days in the given month
L - Whether it's a leap year (1 if it is a leap year, 0 otherwise)
o - The ISO-8601 year number
Y - A four digit representation of a year
y - A two digit representation of a year
a - Lowercase am or pm
A - Uppercase AM or PM
B - Swatch Internet time (000 to 999)
g - 12-hour format of an hour (1 to 12)
G - 24-hour format of an hour (0 to 23)
h - 12-hour format of an hour (01 to 12)
H - 24-hour format of an hour (00 to 23)
i - Minutes with leading zeros (00 to 59)
s - Seconds, with leading zeros (00 to 59)
u - Microseconds (added in PHP 5.2.2)

getdate(time)
    [seconds] - seconds
    [minutes] - minutes
    [hours] - hours
    [mday] - day of the month
    [wday] - day of the week (0=Sunday, 1=Monday,...)
    [mon] - month
    [year] - year
    [yday] - day of the year
    [weekday] - name of the weekday
    [month] - name of the month
    [0] - seconds since Unix Epoch

time()
//The time() function returns the current time in the number of seconds since the Unix Epoch (January 1 1970 00:00:00 GMT).

- - - - - - - - - - - - - - - - - - - - ŁĄCZENIE Z BAZĄ  - - - - - - - - - - - - - - - - - - - - - - - - -

$mysqli = new mysqli("localhost","root","","nazwa_bazy");
#laczenie z baza

if (mysqli_connect_errno()) {
  echo "Failed to connect to MySQL: " . mysqli_connect_error();
  exit();
}
#sprawdzenie czy polaczno

if ($result = mysqli_query($mysqli, "SELECT * FROM Persons")) {
  echo "Returned rows are: " . mysqli_num_rows($result);
  // Free result set
  mysqli_free_result($result);
}
#wysylanie zapytania do bazy

mysqli_query(connection,zapytanie) 
zwraca wynik

mysqli_num_rows(result)
zwraca liczbe wierszy wyniku

mysqli_close(connection)
zakonczenie polaczenia z baza

mysqli_fetch_array(result)
2 parametr resulttype opcjonalny , zwraca tablice z parametrami
    MYSQLI_ASSOC
    MYSQLI_NUM
    MYSQLI_BOTH (this is default)

mysqli_connect_errno()
zwraca kod bledu, jesli brak to 0

mysqli_connect_error();
zwraca kod bledu, jesli nie ma to null

 - - - - - - - - - - - - - - - - - - - - PLIKI COOKIE  - - - - - - - - - - - - - - - - - - - - - - - - -

setcookie($nazwa, $wartosc, $koniec, $sciezka, $domena, $bezpieczne);
//Wszelkie zapamiętywanie zalogowanego użytkownika, oddania głosu w ankiecie itp. są obsługiwane właśnie z //wykorzystaniem cookies. Zasada jest prosta – jeśli cookie istnieje, to znaczy, że głos został oddany. //Jeżeli nie, można oddać głos, po czym cookie jest tworzone.
// zapisanie oddania głosu jednorazowego
setcookie('oddano_glos', '1');


    $wartość - wartość przypisana
    $koniec - czas wygaśnięcia (wyznaczany zazwyczaj względem czasu aktualnego time()
    Jeśli nie został podany ciasteczko istnieje do momentu usunięcia przez użytkownika.
    Jeśli podamy czas w przeszłości, ciasteczko zostaje usunięte np.: time()-3600.
    $sciezka i $domena - stosowane do określenia adresów, dla których cookie jest ważne
    $bezpieczne - true oznacza, że cookie nie będzie wysyłane przez zwykłe połączenie HTTP


// w przypadku gdy głosować można raz dziennie
setcookie('oddano_glos', '1', time()+3600*24);

if(isset($_COOKIE['aktywacja']))
   {echo "Ciasteczko istnieje";}
else
   {echo "Brak ciastecza o nazwie aktywacja";}
//sprawdzanie czy pliki cookie istnieja

session_start() //rozpoczecie sesji
session_stop() //zakonczenie sesji
